apiVersion: "config.istio.io/v1alpha2"
kind: handler
metadata:
  name: signalfx
  namespace: istio-system
spec:
  adapter: signalfx
  connection:
    address: "{ADDRESS}"  # Fill in with actual hostname of adapter service
  params:
    access_token: abcdef
    ingest_url: "{INGEST_URL}"  # Fill in with base ingest URL or remove to use default
    datapoint_interval: 10s
    enable_metrics: true
    enable_tracing: true
    metrics:
    - name: requestcount.instance.istio-system
      type: COUNTER
    - name: requestduration.instance.istio-system
      type: COUNTER
    - name: requestsize.instance.istio-system
      type: COUNTER
    - name: responsesize.instance.istio-system
      type: COUNTER
    - name: tcpbytesent.instance.istio-system
      type: COUNTER
    - name: tcpbytereceived.instance.istio-system
      type: COUNTER
    tracing:
      buffer_size: 1000
      sample_probability: 1.0
      localEndpointNameTagKey: source.name
      localEndpointIpTagKey: source.ip
      remoteEndpointNameTagKey: destination.name
      remoteEndpointIpTagKey: destination.ip
---
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: signalfxhttp
  namespace: istio-system
spec:
  match: context.protocol == "http" || context.protocol == "grpc"
  actions:
  - handler: signalfx.istio-system
    instances:
    - requestcount
    - requestduration
    - requestsize
    - responsesize
---
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: signalfxtcp
  namespace: istio-system
spec:
  match: context.protocol == "tcp"
  actions:
  - handler: signalfx.istio-system
    instances:    
    - tcpbytesent
    - tcpbytereceived
---
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: signalfxtracespan
  namespace: istio-system
spec:
  template: tracespan
  params:
    traceId: request.headers["x-b3-traceid"] | ""
    spanId: request.headers["x-b3-spanid"] | ""
    parentSpanId: request.headers["x-b3-parentspanid"] | ""
    # If the path contains query parameters, they will be split off and put into
    # tags such that the span name sent to SignalFx will consist only of the path
    # itself.
    spanName: request.path | "/"
    startTime: request.time
    endTime: response.time
    # If this is >=500, the span will get an 'error' tag
    httpStatusCode: response.code | 0
    clientSpan: context.reporter.kind == "outbound"
    # Span tags below that do not have comments are useful but optional and will
    # be passed to SignalFx unmodified. The tags that have comments are interpreted
    # in a special manner, but are still optional.
    spanTags:
      # This gets put into the remoteEndpoint.ipv4 field
      destination.ip: destination.ip | ip("0.0.0.0")
      # This gets put into the remoteEndpoint.name field
      destination.name: destination.name | "unknown"
      destination.namespace: destination.namespace | "unknown"
      request.host: request.host | ""
      request.method: request.method | ""
      request.path: request.path | ""
      request.size: request.size | 0
      request.useragent: request.useragent | ""
      response.size: response.size | 0
      # This gets put into the localEndpoint.name field
      source.name: source.name | "unknown"
      # This gets put into the localEndpoint.ipv4 field
      source.ip: source.ip | ip("0.0.0.0")
      source.namespace: source.namespace | "unknown"
      source.version: source.labels["version"] | "unknown"

---
apiVersion: config.istio.io/v1alpha2
kind: rule
metadata:
  name: signalfxtracing
  namespace: istio-system
spec:
  actions:
  - handler: signalfx.istio-system
    instances:
    - signalfxtracespan
  match: "true"
